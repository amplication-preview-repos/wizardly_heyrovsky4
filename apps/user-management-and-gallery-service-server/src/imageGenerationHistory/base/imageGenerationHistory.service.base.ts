/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ImageGenerationHistory as PrismaImageGenerationHistory,
} from "@prisma/client";

export class ImageGenerationHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ImageGenerationHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.imageGenerationHistory.count(args);
  }

  async imageGenerationHistories(
    args: Prisma.ImageGenerationHistoryFindManyArgs
  ): Promise<PrismaImageGenerationHistory[]> {
    return this.prisma.imageGenerationHistory.findMany(args);
  }
  async imageGenerationHistory(
    args: Prisma.ImageGenerationHistoryFindUniqueArgs
  ): Promise<PrismaImageGenerationHistory | null> {
    return this.prisma.imageGenerationHistory.findUnique(args);
  }
  async createImageGenerationHistory(
    args: Prisma.ImageGenerationHistoryCreateArgs
  ): Promise<PrismaImageGenerationHistory> {
    return this.prisma.imageGenerationHistory.create(args);
  }
  async updateImageGenerationHistory(
    args: Prisma.ImageGenerationHistoryUpdateArgs
  ): Promise<PrismaImageGenerationHistory> {
    return this.prisma.imageGenerationHistory.update(args);
  }
  async deleteImageGenerationHistory(
    args: Prisma.ImageGenerationHistoryDeleteArgs
  ): Promise<PrismaImageGenerationHistory> {
    return this.prisma.imageGenerationHistory.delete(args);
  }
}
